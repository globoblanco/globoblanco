pipeline {

  // Define agent used
  agent {
    docker { image 'liquibase/liquibase:4.8' }
  }

  // Define environment variables needed for the pipeline
  environment {
    POSTGRES_CREDS = credentials('POSTGRES_CREDENTIALS')
    LIQUIBASE_COMMAND_USERNAME = '$LIQUIBASE_COMMAND_USERNAME'
    LIQUIBASE_COMMAND_PASSWORD = '$LIQUIBASE_COMMAND_PASSWORD'
    LIQUIBASE_COMMAND_URL = '$LIQUIBASE_COMMAND_URL'
    LIQUIBASE_PRO_LICENSE_KEY = '$LIQUIBASE_PRO_LICENSE_KEY'
    LIQUIBASE_COMMAND_CHANGELOG_FILE = '$LIQUIBASE_COMMAND_CHANGELOG_FILE'
  }

  // Define pipeline stages
  stages {

    stage('Verification') {
      steps {
        //sh 'printenv'
	sh 'echo $LIQUIBASE_PRO_LICENSE_KEY'
        sh 'liquibase --version'
      }
    }

    stage('Information') {
      steps {
        echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
	echo "Build information at: ${env.RUN_DISPLAY_URL}"
      }
    }

    stage('Validation') {
      steps {
        echo 'Validating Jenkins ChangeLog file...'
	sh 'liquibase --logLevel=INFO validate'
      }
    }

    stage('Qualification') {
      steps {
        echo 'Executing Quality Checks...'
	sh 'liquibase checks run '
      }
    }

    stage('Pending') {
      steps {
        echo 'Checking for Pending changes...'
	sh 'liquibase status --verbose '
      }
    }

    stage('Bookmarking') {
      steps {
        echo 'Applying a tag to bookmark rollback point...'
      }
    }

    stage('Apply') {
      steps {
        echo 'Applying changes to Database...'
      }
    }
  }

  post {
    failure {
      sh 'echo "Build failed :-("'
    }
  }
}
