pipeline {
  
  // Define agent used
  agent {
    docker { image 'liquibase/liquibase:4.8' }
  }

  // Define environment variables needed for the pipeline
  environment {
    POSTGRES_CREDS = credentials('POSTGRES_CREDENTIALS')
    BUILD_ID = '${env.BUILD_ID}'
  }

  // Define pipeline stages
  stages {
    
    // Verification Step
    //stage ('Verification') {
    //  steps {
    //    //sh 'echo ${LIQUIBASE_PRO_LICENSE_KEY}'
    //    sh 'liquibase --version'
    //  }
    //}

    // ChangeLog Validation
    stage ('changeLogFile Validation') {
      steps {
        echo "Validating changeLogFile syntax..."
	sh 'liquibase --changeLogFile=db.changelog-master.xml validate'
      }
    }

    // Display information
    stage ('Information') {
      steps {
        echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
	echo "Build information at: ${env.RUN_DISPLAY_URL}"
      }
    }

    // Qualification Stage
    stage ('Qualification') {
      steps {
        echo "Executing Quality Checks..."
	sh 'liquibase --changeLogFile=db.changelog-master.xml checks run'
      }
    }

    // Pending
    stage ('Pending') {
      steps {
        echo "Checking for Pending changes..."
	sh 'liquibase --changeLogFile=db.changelog-master.xml status --verbose'
      }
    }

    // Verify changeLogFile
    stage ('Verify ChangeLog') {
      steps {
        echo "Verifying changeLogFile..."
        sh 'liquibase  --changeLogFile=db.changelog-master.xml updateSQL'
      }
    }

    // Create a bookmark tag
    stage ('Bookmarking') {
      steps {
        echo "Creating bookmak tag..."
	sh 'liquibase --logLevel=info --changeLogFile=db.changelog-master.xml tag version_$BUILD_ID'
      }
    }
  }

  // Post steps
  post {
    failure {
      echo 'Build failed :-('
    }
  }

}
